@{
    Layout = "/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Quản lý Series · Admin";

    var urlGetAll = Url.Action("getall", "Series", new { area = "Admin" });
    var urlAdd = Url.Action("addSeries", "Series", new { area = "Admin" });
    var urlUpdate = Url.Action("updateSeries", "Series", new { area = "Admin" });
    var urlDelete = Url.Action("delete", "Series", new { area = "Admin" });
}

<style>
    /* Loading + Toast */
    .loading-overlay {
        position: fixed;
        inset: 0;
        display: none;
        z-index: 1100;
        background: rgba(0,0,0,.25);
        backdrop-filter: blur(1px)
    }

        .loading-overlay .spinner-wrap {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            background: rgba(0,0,0,.35);
            padding: 16px 18px;
            border-radius: 10px
        }

    .spinner {
        width: 52px;
        height: 52px;
        border: 5px solid #eee;
        border-top: 5px solid #27d3c3;
        border-radius: 50%;
        animation: spin 1s linear infinite
    }
    @@keyframes spin {
        from

    {
        transform: rotate(0)
    }

    to {
        transform: rotate(360deg)
    }

    }

    .toastx {
        position: fixed;
        top: 18px;
        right: 18px;
        min-width: 280px;
        z-index: 1200;
        background: #333;
        color: #fff;
        border-radius: 10px;
        padding: 12px 16px;
        display: none;
        box-shadow: 0 8px 24px rgba(0,0,0,.25)
    }

        .toastx.success {
            background: #28a745
        }

        .toastx.error {
            background: #dc3545
        }

    .chip {
        display: inline-block;
        padding: .15rem .5rem;
        border-radius: 1rem;
        font-size: .775rem;
        background: var(--bs-secondary-bg);
        color: var(--bs-body-color)
    }
</style>

<div class="loading-overlay" id="__loadingOverlay">
    <div class="spinner-wrap"><div class="spinner"></div></div>
</div>
<div class="toastx" id="__toastMessage"></div>

<div class="d-flex flex-wrap justify-content-between align-items-center gap-2 mb-3">
    <h4 class="m-0"><i class="bi bi-collection-play me-2"></i>Quản lý Series</h4>
    <div class="d-flex gap-2">
        <button class="btn btn-outline-secondary" id="btnRefresh">
            <i class="bi bi-arrow-clockwise me-1"></i>Nạp lại
        </button>
        <button class="btn btn-primary" id="btnAdd">
            <i class="bi bi-plus-circle me-1"></i>Thêm series
        </button>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="row g-2 mb-3">
            <div class="col-md-4">
                <input id="txtSearch" class="form-control" placeholder="Tìm theo tiêu đề...">
            </div>
            <div class="col-md-3">
                <select id="slStatus" class="form-select">
                    <option value="">Trạng thái (Tất cả)</option>
                    <option value="ONGOING">ONGOING</option>
                    <option value="ENDED">ENDED</option>
                    <option value="DRAFT">DRAFT</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="slPremium" class="form-select">
                    <option value="">Premium (Tất cả)</option>
                    <option value="Y">Có</option>
                    <option value="N">Không</option>
                </select>
            </div>
            <div class="col-md-2">
                <select id="pageSize" class="form-select">
                    <option value="10">10 / trang</option>
                    <option value="20" selected>20 / trang</option>
                    <option value="50">50 / trang</option>
                    <option value="100">100 / trang</option>
                </select>
            </div>
        </div>

        <div class="table-responsive">
            <table id="seriesTable" class="table table-hover align-middle">
                <thead>
                    <tr>
                        <th style="width: 90px;">ID</th>
                        <th>Tiêu đề</th>
                        <th class="text-nowrap">First Air</th>
                        <th class="text-nowrap">Last Air</th>
                        <th>Status</th>
                        <th>Premium</th>
                        <th class="text-end">Thao tác</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div id="pagerWrap" class="mt-2"></div>
    </div>
</div>

<!-- Modal Add/Edit -->
<div class="modal fade" id="seriesModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><span id="seriesModalTitle">Thêm series</span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <form id="seriesForm" class="row g-3">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="SeriesId" />
                    <div class="col-md-8">
                        <label class="form-label">Tiêu đề *</label>
                        <input class="form-control" id="Title" required />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Original Title</label>
                        <input class="form-control" id="OriginalTitle" />
                    </div>
                    <div class="col-md-12">
                        <label class="form-label">Overview</label>
                        <textarea class="form-control" id="Overview" rows="3"></textarea>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">First Air Date</label>
                        <input type="date" class="form-control" id="FirstAirDate" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Last Air Date</label>
                        <input type="date" class="form-control" id="LastAirDate" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Status</label>
                        <select class="form-select" id="Status">
                            <option value="">--</option>
                            <option value="ONGOING">ONGOING</option>
                            <option value="ENDED">ENDED</option>
                            <option value="DRAFT">DRAFT</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Premium</label>
                        <select class="form-select" id="IsPremium">
                            <option value="N">Không</option>
                            <option value="Y">Có</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">IMDB ID</label>
                        <input class="form-control" id="ImdbId" placeholder="tt0903747" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">TMDB ID</label>
                        <input class="form-control" id="TmdbId" placeholder="1396" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Country</label>
                        <input class="form-control" id="CountryCode" placeholder="US, VN..." />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Language</label>
                        <input class="form-control" id="LanguageCode" placeholder="en, vi..." />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
                <button class="btn btn-primary" id="btnSave"><i class="bi bi-save me-1"></i>Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" crossorigin="anonymous"></script>
    <script>
        (function(){
          // ===== URLs =====
          const urls = {
            getAll: '@urlGetAll',
            add:    '@urlAdd',
            update: '@urlUpdate',
            delete: '@urlDelete'
          };

          // ===== Elements & State =====
          const $overlay = $("#__loadingOverlay");
          const $toast   = $("#__toastMessage");
          const $tbody   = $('#seriesTable tbody');
          const $pager   = $('#pagerWrap');
          const modalEl  = document.getElementById('seriesModal');
          const modal    = bootstrap.Modal.getOrCreateInstance(modalEl);

          let cache = [];     // full list
          let filtered = [];  // after filter
          let page = 1;

          // ===== Helpers =====
          function showLoading(){ $overlay.fadeIn(80); }
          function hideLoading(){ $overlay.fadeOut(120); }
          function showToast(msg, ok=true, ms=2600){
            $toast.text(msg||"").removeClass("success error").addClass(ok?"success":"error").fadeIn(120);
            setTimeout(()=> $toast.fadeOut(150), ms);
          }
          function pickList(res){
            const data = res?.data ?? res?.Data ?? null;
            if (!data) return [];
            if (Array.isArray(data)) return data;
            if (Array.isArray(data.table)) return data.table;
            if (Array.isArray(data.Table)) return data.Table;
            return [];
          }
          function toDateStr10(v){
            if(!v) return '';
            try{
              const s = String(v);
              if(/^\d{4}-\d{2}-\d{2}/.test(s)) return s.substring(0,10);
              const d = new Date(s); if(isNaN(d)) return '';
              const mm = String(d.getMonth()+1).padStart(2,'0');
              const dd = String(d.getDate()).padStart(2,'0');
              return `${d.getFullYear()}-${mm}-${dd}`;
            }catch{ return ''; }
          }
          function dateLocalStart(d){ return d ? (d + "T00:00:00") : null; }

          // Pagination
          function paginate(list, page, size){
            const total = list.length;
            const last = Math.max(1, Math.ceil(total/size));
            const p = Math.min(Math.max(1, page), last);
            const start = (p-1)*size, end = start + size;
            return { page:p, size, total, last, items:list.slice(start,end) };
          }
          function renderPager($wrap, state){
            const { page, last, total } = state;
            const dis = c => c ? "disabled" : "";
            const btn = (label,target,disabled)=>
              `<li class="page-item ${dis(disabled)}"><a class="page-link" href="#" data-page="${target}">${label}</a></li>`;
            const html = `
              <div class="d-flex flex-wrap justify-content-between align-items-center gap-2">
                <div class="small text-secondary">Tổng: <b>${total}</b> bản ghi • Trang <b>${page}</b>/<b>${last}</b></div>
                <nav aria-label="pagination">
                  <ul class="pagination m-0">
                    ${btn("«",1, page<=1)}
                    ${btn("‹",page-1, page<=1)}
                    ${btn(page,page,true)}
                    ${btn("›",page+1, page>=last)}
                    ${btn("»",last, page>=last)}
                  </ul>
                </nav>
              </div>`;
            $wrap.html(html);
            $wrap.find("a.page-link").on("click", function(e){
              e.preventDefault();
              const p = Number($(this).data("page"));
              if(Number.isFinite(p)){ page = p; renderTablePage(); }
            });
          }

          // ===== Filter + Render =====
          function applyFilter(){
            const q  = ($('#txtSearch').val()||'').trim().toLowerCase();
            const st = ($('#slStatus').val()||'').trim();
            const pm = ($('#slPremium').val()||'').trim();

            filtered = cache.filter(s=>{
              const title  = (s.title ?? s.Title ?? '').toLowerCase();
              const status = (s.status ?? s.Status ?? '');
              const ipRaw  = (s.iS_PREMIUM ?? s.IsPremium ?? 'N');
              const ipYN   = (typeof ipRaw === 'string') ? ipRaw.toUpperCase() : (ipRaw ? 'Y' : 'N');

              const okQ  = !q  || title.includes(q);
              const okSt = !st || status === st;
              const okPm = !pm || ipYN === pm;
              return okQ && okSt && okPm;
            });
          }

          function renderTablePage(){
            const size = Number($('#pageSize').val()||20);
            const state = paginate(filtered, page, size);

            const rows = state.items.map(s=>{
              const id  = s.serieS_ID ?? s.SeriesId ?? s.seriesId;
              const ti  = s.title ?? s.Title ?? '';
              const fa  = toDateStr10(s.firstAirDate ?? s.FirstAirDate ?? s.firsT_AIR_DATE);
              const la  = toDateStr10(s.lastAirDate  ?? s.LastAirDate  ?? s.lasT_AIR_DATE);
              const stt = s.status ?? s.Status ?? '';
              const ip  = (s.iS_PREMIUM ?? s.IsPremium ?? 'N');
              const ipYN= (typeof ip === 'string') ? ip.toUpperCase() : (ip ? 'Y' : 'N');
              const ipTxt = (ipYN === 'Y') ? 'Có' : 'Không';

              return `<tr>
                <td class="text-muted">${id ?? ''}</td>
                <td class="fw-semibold">${ti}</td>
                <td>${fa || ''}</td>
                <td>${la || ''}</td>
                <td><span class="chip">${stt}</span></td>
                <td><span class="chip">${ipTxt}</span></td>
                <td class="text-end">
                  <div class="btn-group">
                    <button class="btn btn-sm btn-outline-secondary btn-edit" data-id="${id}">
                      <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-danger btn-del" data-id="${id}">
                      <i class="bi bi-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>`;
            }).join('');

            $tbody.html(rows || `<tr><td colspan="7" class="text-center text-secondary">Không có dữ liệu</td></tr>`);
            renderPager($pager, state);
          }

          function render(){ applyFilter(); page = 1; renderTablePage(); }

          // ===== Data =====
          function reloadAll(){
            showLoading();
            $.ajax({
              url: urls.getAll, type:"GET",
              success(res){
                cache = pickList(res);
                render();
                showToast("Đã tải danh sách series", true);
              },
              error(xhr){
                const text = xhr?.responseJSON?.message || xhr?.responseText || "Lỗi kết nối máy chủ.";
                showToast(text, false);
              },
              complete(){ hideLoading(); }
            });
          }

          // ===== CRUD =====
          function openAdd(){
            $('#seriesModalTitle').text('Thêm series');
            $('#seriesForm')[0].reset();
            $('#SeriesId').val('');
            $('#Status').val('');
            $('#IsPremium').val('N');
            modal.show();
          }

          function openEdit(id){
            const s = cache.find(x => (x.serieS_ID ?? x.SeriesId ?? x.seriesId) == id);
            if(!s){ showToast("Không tìm thấy series.", false); return; }

            $('#seriesModalTitle').text('Chỉnh sửa series');
            $('#SeriesId').val(s.serieS_ID ?? s.SeriesId ?? s.seriesId ?? '');
            $('#Title').val(s.title ?? s.Title ?? '');
            $('#OriginalTitle').val(s.originaL_TITLE ?? s.OriginalTitle ?? '');
            $('#Overview').val(s.overview ?? s.Overview ?? '');
            $('#FirstAirDate').val(toDateStr10(s.firsT_AIR_DATE ?? s.FirstAirDate));
            $('#LastAirDate').val(toDateStr10(s.lasT_AIR_DATE ?? s.LastAirDate));
            $('#Status').val(s.status ?? s.Status ?? '');
            const ip = (s.iS_PREMIUM ?? s.IsPremium ?? 'N');
            $('#IsPremium').val( (typeof ip === 'string') ? ip.toUpperCase() : (ip ? 'Y' : 'N') );
            $('#ImdbId').val(s.imdB_ID ?? s.ImdbId ?? '');
            $('#TmdbId').val(s.tmdB_ID ?? s.TmdbId ?? '');
            $('#CountryCode').val(s.countrY_CODE ?? s.CountryCode ?? '');
            $('#LanguageCode').val(s.languagE_CODE ?? s.LanguageCode ?? '');
            modal.show();
          }

          function save(){
            const anti = $('input[name="__RequestVerificationToken"]').val();
            const id = ($('#SeriesId').val()||'').trim();
            const isEdit = !!id;
            const url = isEdit ? urls.update : urls.add;

            const title = ($('#Title').val()||'').trim();
            if(!title){ showToast("Vui lòng nhập tiêu đề", false); return; }

            const statusVal = $('#Status').val();
            const isPremiumBool = ($('#IsPremium').val()||'N').toUpperCase()==='Y';

            const payload = {
              SeriesId:    isEdit ? Number(id) : undefined,
              Title:       title,
              OriginalTitle: ($('#OriginalTitle').val()||'').trim() || null,
              Overview:      ($('#Overview').val()||'').trim() || null,
              FirstAirDate:  dateLocalStart($('#FirstAirDate').val()),
              LastAirDate:   dateLocalStart($('#LastAirDate').val()),
              Status:        statusVal && statusVal.length ? statusVal : "ONGOING",
              IsPremium:     isPremiumBool,
              ImdbId:        ($('#ImdbId').val()||'').trim() || null,
              TmdbId:        ($('#TmdbId').val()||'').trim() || null,
              CountryCode:   ($('#CountryCode').val()||'').trim() || null,
              LanguageCode:  ($('#LanguageCode').val()||'').trim() || null
            };

            showLoading();
            $.ajax({
              url, type:"POST",
              contentType:"application/json; charset=utf-8",
              headers: anti ? { "RequestVerificationToken": anti } : {},
              data: JSON.stringify(payload),
              success(res){
                const ok = res && (res.success===true || res.code==="200");
                if(ok){ showToast(isEdit?"Đã cập nhật":"Đã thêm mới", true); modal.hide(); reloadAll(); }
                else  { showToast(res?.message || "Thao tác thất bại.", false); }
              },
              error(xhr){
                const text = xhr?.responseJSON?.message || xhr?.responseText || "Lỗi kết nối máy chủ.";
                showToast(text, false);
              },
              complete(){ hideLoading(); }
            });
          }

          function removeItem(id){
            if(!confirm(`Xóa series #${id}?`)) return;
            showLoading();
            $.ajax({
              url: urls.delete, type:"GET", data:{ id },
              success(res){
                const ok = res && (res.success===true || res.code==="200");
                if(ok){ showToast("Đã xóa", true); reloadAll(); }
                else  { showToast(res?.message || "Xóa thất bại.", false); }
              },
              error(xhr){
                const text = xhr?.responseJSON?.message || xhr?.responseText || "Lỗi kết nối máy chủ.";
                showToast(text, false);
              },
              complete(){ hideLoading(); }
            });
          }

          // ===== Events =====
          $('#btnRefresh').on('click', reloadAll);
          $('#btnAdd').on('click', openAdd);
          $('#btnSave').on('click', save);

          $('#txtSearch, #slStatus, #slPremium').on('input change', function(){ render(); });
          $('#pageSize').on('change', function(){ page=1; renderTablePage(); });

          $tbody.on('click', '.btn-edit', function(){ openEdit($(this).data('id')); });
          $tbody.on('click', '.btn-del',  function(){ removeItem($(this).data('id')); });

          // First load
          reloadAll();
        })();
    </script>
}
